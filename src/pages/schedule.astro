---
import PageLayout from "@layouts/PageLayout.astro";
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"


const bgColors = ["bg-yellow-200", "bg-lime-400", "bg-sky-200", "bg-violet-400"]

// The expanded schedule data
// define a TypeScript type for the sched.schedule.offerings data
type SchedOffering = {
    code: string,
    name: string,
    sections: {
        section: string,
        classes: {
            day: string,
            start: string,
            duration: number,
            room: string,
            livestream?: string
        }[]
    }[]
}

// Define a TypeScript type for the sched data
type Sched = {
    term: {
        number: number,
        title: string,
        start: string,
        year: string
    },
    schedule: {
        instructor: string,
        offerings: {
            code: string,
            name: string,
            sections: {
                section: string,
                classes: {
                    day: string,
                    start: string,
                    duration: number,
                    room: string,
                    livestream?: string
                }[]
            }[]
        }[]
    }
}
const sep2024sched: Sched = {
    "term": {
        "number": 1241,
        "title": "Fall Term",
        "start": "Sep 3, 2024",
        "year": "2024/2025"
    },
    "schedule": {
        "instructor": "Dan Gilleland",
        "offerings": [
            {
                "code": "CPSC-1520",
                "name": "Client-Side Scripting in JavaScript",
                "sections": [
                    {
                        "section": "A02",
                        "classes": [
                            {
                                "day": "Monday",
                                "start": "8:00",
                                "duration": 2,
                                "room": "WA320"
                            },
                            {
                                "day": "Wednesday",
                                "start": "13:00",
                                "duration": 2,
                                "room": "O",
                                "livestream": "W309FB"
                            },
                            {
                                "day": "Thursday",
                                "start": "8:00",
                                "duration": 2,
                                "room": "WA314"
                            }
                        ]
                    }
                ]
            },
            {
                "code": "DMIT-1508",
                "name": "Database Fundamentals",
                "sections": [
                    {
                        "section": "A03",
                        "classes": [
                            {
                                "day": "Monday",
                                "start": "10:00",
                                "duration": 2,
                                "room": "WA320"
                            },
                            {
                                "day": "Wednesday",
                                "start": "8:00",
                                "duration": 2,
                                "room": "WA302"
                            },
                            {
                                "day": "Thursday",
                                "start": "13:00",
                                "duration": 2,
                                "room": "O",
                                "livestream": "W309FB|Home"
                            }
                        ]
                    },
                    {
                        "section": "A04",
                        "classes": [
                            {
                                "day": "Tuesday",
                                "start": "10:00",
                                "duration": 2,
                                "room": "O",
                                "livestream": "Home"
                            },
                            {
                                "day": "Wednesday",
                                "start": "10:00",
                                "duration": 2,
                                "room": "WA312"
                            },
                            {
                                "day": "Friday",
                                "start": "8:00",
                                "duration": 2,
                                "room": "WA302"
                            }
                        ]
                    }
                ]
            }
        ]
    }
};
const sched:Sched = {
  "term": {
    "number": 1242,
    "title": "Winter Term",
    "start": "Jan 08, 2025",
    "year": "2024/2025"
  },
  "schedule": {
    "instructor": "Dan Gilleland",
    "offerings": [
      {
        "name": "Client-Side Scripting Java",
        "code": "CPSC 1520",
        "sections": [
          {
            "section": "A05",
            "classes": [
              {
                "day": "Wednesday",
                "room": "O",
                "duration": 2,
                "start": "10:00"
              },
              {
                "day": "Thursday",
                "room": "MAIN W WB308",
                "duration": 2,
                "start": "13:00"
              },
              {
                "day": "Monday",
                "room": "MAIN W WB320",
                "duration": 2,
                "start": "10:00"
              }
            ]
          },
          {
            "section": "A01",
            "classes": [
              {
                "day": "Wednesday",
                "room": "O",
                "duration": 2,
                "start": "13:00"
              },
              {
                "day": "Friday",
                "room": "MAIN W WA314",
                "duration": 2,
                "start": "10:00"
              },
              {
                "day": "Tuesday",
                "room": "MAIN W WB306",
                "duration": 2,
                "start": "10:00"
              }
            ]
          },
          {
            "section": "A02",
            "classes": [
              {
                "day": "Thursday",
                "room": "MAIN W WB308",
                "duration": 2,
                "start": "10:00"
              },
              {
                "day": "Friday",
                "room": "MAIN W W215",
                "duration": 2,
                "start": "15:00"
              },
              {
                "day": "Monday",
                "room": "O",
                "duration": 2,
                "start": "13:00"
              }
            ]
          }
        ]
      }
    ]
  }
}
const instructorName = sched.schedule.instructor;
const term = sched.term;
// The compact schedule data
const jan2024 = [
    {
        "course": "CPSC-1517",
        "title": "Intro to App Development",
        "section": "A01",
        "classes": [
            {
                "day": "Tuesday",
                "time": "10:00",
                "location": "WA320",
                "duration": 2
            },
            {
                "day": "Wednesday",
                "time": "8:00",
                "location": "WA314",
                "duration": 2
            },
            {
                "day": "Friday",
                "time": "13:00",
                "location": "Online",
                "duration": 2
            }
        ]
    },
    {
        "course": "CPSC-1517",
        "title": "Intro to App Development",
        "section": "A02",
        "classes": [
            {
                "day": "Monday",
                "time": "8:00",
                "location": "WB320",
                "duration": 2
            },
            {
                "day": "Tuesday",
                "time": "8:00",
                "location": "WB320",
                "duration": 2
            },
            {
                "day": "Thursday",
                "time": "15:00",
                "location": "WB320",
                "duration": 2
            }
        ]
    },
    {
        "course": "CPSC-1520",
        "title": "Client-Side Scripting with JavaScript",
        "section": "A03",
        "classes": [
            {
                "day": "Monday",
                "time": "10:00",
                "location": "WB320",
                "duration": 2
            },
            {
                "day": "Wednesday",
                "time": "10:00",
                "location": "WB322",
                "duration": 2
            },
            {
                "day": "Friday",
                "time": "8:00",
                "location": "Online",
                "duration": 2
            }
        ]
    }
]

// <usableSchedule>
    // Convert the schedule data into a more usable format
    const schedule = jan2024.flatMap(x => x.classes.map(y => ({"course":x.course, "section": x.section, "day":y.day, "times":Array(y.duration).fill(y.time).map((z, i) => parseInt(z.split(':')[0]) + i), "room":y.location})));
    // Convert sched.schedule.offerings into the same useful format as schedule which was created from jan2024
    const sep2024 = sched.schedule.offerings.flatMap(x => x.sections.flatMap(y => y.classes.map(z => ({"course":x.code, "section": y.section, "day":z.day, "times":Array(z.duration).fill(z.start).map((a, i) => parseInt(a.split(':')[0]) + i), "room":z.room === "O"?"Online":z.room}))));
// </usableSchedule>

// <colorMapping>
    // From the array of bgColors, pick a distinct color for each course/section combination from the schedule
    const bgCourses = new Set(sep2024.map(x => `${x.course}-${x.section}`));
    const bgCourseColors = Array.from(bgCourses).map((x, i) => ({[x]: bgColors[i % bgColors.length]}));
    console.log("Course Color Map",bgCourseColors);
    // A function that returns the color from bgCourseColors for a given course/section combination
    const getColor = (course:string, section:string) => bgCourseColors.filter(x => x[`${course}-${section}`])[0]?.[`${course}-${section}`];

    console.log("Found:", getColor("CPSC-1520", "A03"));
    console.log("Not Found:", getColor("CPSC-1520", "A04"));
    const getCourses = (x:any) => new Set(x.map((x:any) => `${x.course}-${x.section}`));
    const mapColors = (x:any) => Array.from(x).map((x:any, i:number) => ({[x]: bgColors[i % bgColors.length]}));
    console.log("FP", mapColors(getCourses(sep2024)));
// </colorMapping>


// The hours on the calendar run from 08:00 to 16:00
const hours = new Array(9).fill(0).map((_, index) => index + 8);
// The days on the calendar from Monday to Friday
const days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
// Create a 2D array of cells, each containing the hour, day, and course (if any) that is scheduled for that hour and day
const cells = hours.map(h => ({ hour: h, days: days.map(d => ({ day: d, course: (sep2024.filter(s => s.day === d && s.times.includes(h))) })) }));
// Strip out cells that are a continuation of a course from the previous hour
cells.forEach(cell => cell.days = cell.days.filter(d => d.course.length === 0 || d.course[0].times[0] === cell.hour));
console.log("cells", cells);

const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
const termStart = () => new Date(term.start);
const termStartMonth = () => monthNames[termStart().getMonth()];
---
<PageLayout title="Home" description="Dan's Teaching Schedule - Jan 2024">
    <TopLayout>
        <div class="animate page-heading">
          Schedule for {instructorName} 
        </div>
    </TopLayout>
    <BottomLayout>
        <table class="w-full">
            <caption>{term.title}, {termStartMonth()} ({term.year})</caption>
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Monday</th>
                    <th>Tuesday</th>
                    <th>Wednesday</th>
                    <th>Thursday</th>
                    <th>Friday</th>
                    <th>Time</th>
                </tr>
            </thead>
            <tbody>
                {cells.map(e =>
                    <tr>
                        <th class="text-sm">{e.hour > 12 ? e.hour - 12 : e.hour}:00</th>
                        {e.days.map(d => <>{d.course.length === 1 ? <td rowspan="2" class={getColor(d.course[0].course, d.course[0].section) + ' text-center text-black'} data-course={JSON.stringify(d.course[0])}>{d.course[0].course}<br />{d.course[0].section} | {d.course[0].room}</td> : <td></td>}</>)}
                        <th class="text-sm">{e.hour > 12 ? e.hour - 12 : e.hour}:00</th>
                    </tr>
                )}
            </tbody>
        </table>


        <div class="hidden grid-cols-2 gap-1">
            <details open>
                <summary>
                    <h2>Jan 2024 (OLD)</h2>
                </summary>
                <pre>{ JSON.stringify(schedule, null, 2) }</pre>
            </details>
            <details open>
                <summary>
                    <h2>Sep 2024 (Current)</h2>
                </summary>
                <pre>{ JSON.stringify(sep2024, null, 2) }</pre>
            </details>

            <details class=" col-span-2">
                <summary>
                    <h2>Cells</h2>
                </summary>
                <pre>{ JSON.stringify(cells, null, 2) }</pre>
            </details>
        </div>
    </BottomLayout>
        <!-- <style>
            td:not(:empty) {
                background-color: #f0f0f0;
                vertical-align: top;
            }
            tbody th {
                background-color: #f0f0f0;
                text-align: right;
            }
        </style> -->
</PageLayout>
